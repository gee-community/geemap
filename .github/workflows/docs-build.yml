name: docs-build

on:
    pull_request:
        branches:
            - master

jobs:
    docs-build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                python-version: ["3.12"]

        env:
            USE_MKDOCS: ${{ secrets.USE_MKDOCS }}

        steps:
            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              with:
                  version: "0.4.16"
                  # enable-cache: true

            - name: Set up Python ${{ matrix.python-version }}
              run: uv python install ${{ matrix.python-version }}

            - name: Install dependencies
              run: uv sync --python ${{ matrix.python-version }}

            - name: Install optional dependencies
              run: |
                  uv pip install --find-links https://girder.github.io/large_image_wheels GDAL pyproj
                  uv pip install -r pyproject.toml --extra all
            - name: Test import
              run: |
                  uv run python -c "import geemap; print('geemap import successful')"
                  uv run python -c "from osgeo import gdal; print('gdal import successful')"
                  uv run gdalinfo --version

            - name: Running tests
              run: |
                  uv run python -m unittest discover tests/
            - name: Install mkdocs
              run: |
                  uv pip install -r requirements_docs.txt
                  uv run mkdocs build

            - name: Deploy to Netlify
              uses: nwtgck/actions-netlify@v3.0
              with:
                  publish-dir: "./site"
                  production-branch: master
                  github-token: ${{ secrets.GITHUB_TOKEN }}
                  deploy-message: "Deploy from GitHub Actions"
                  enable-pull-request-comment: true
                  enable-commit-comment: false
                  overwrites-pull-request-comment: true
              env:
                  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
                  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

            - name: Cleanup
              if: always()
              run: |
                  echo "Cleaning up resources."
